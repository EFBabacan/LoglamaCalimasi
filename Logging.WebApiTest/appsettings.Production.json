{
  "Serilog": {
    // Production'da Information ile başla
    "LevelSwitches": { "$controlSwitch": "Information" },
    "MinimumLevel": {
      "ControlledBy": "$controlSwitch",
      // Microsoft ve System gürültüsünü KESİNLİKLE sustur
      "Override": {
        "Microsoft": "Warning",
        "Microsoft.Hosting.Lifetime": "Warning",
        "System": "Warning"
      }
    },
    "Using": [ "PostaGuvercini.Logging", "Serilog.Sinks.File" ],
    "WriteTo": [
      // Kural 0: Konsol KAPALI (Sunucuda konsolu kimse izlemez, performans kaybı)
      // { "Name": "Console" }, // Bu satırı sildik veya yorumladık

      // Kural 1: Acil Durum (Aynı kalıyor, hedef dosya adı farklı olabilir)
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": { "expression": "Contains(RenderedMessage, 'Ödeme Başarısız') or EventType = 'PaymentFailure'" }
              }
            ],
            "WriteTo": [
              {
                "Name": "BatchedFileSink",
                "Args": {
                  "filePath": "logs/Acil_Hatalar_PROD.txt",
                  "options": {
                    "batchSizeLimit": 50,
                    "period": "0.00:00:05"
                  }
                }
              }
            ]
          }
        }
      },
      // Kural 2: Microsoft Logları (Sadece Warning ve üzeri ayrı bir dosyaya)
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": { "expression": "StartsWith(SourceContext, 'Microsoft.')" }
              }
            ],
            "MinimumLevel": "Warning", // Seviye zaten yukarıda override edilmişti ama burada tekrar belirtmek iyi olabilir
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": "logs/microsoft-logs-PROD.txt",
                  "rollingInterval": "Day"
                }
              }
            ]
          }
        }
      },
      // Kural 3: Bizim Uygulama Logları (Seq - Ana hedefimiz)
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByExcluding",
                "Args": { "expression": "Contains(RenderedMessage, 'Ödeme Başarısız') or EventType = 'PaymentFailure'" }
              },
              {
                "Name": "ByIncludingOnly",
                "Args": { "expression": "StartsWith(SourceContext, 'Logging.WebApiTest') or StartsWith(SourceContext, 'Logging.WebAppTest') or StartsWith(SourceContext, 'PostaGuvercini.Logging')" }
              }
            ],
            "MinimumLevel": "Information",
            "WriteTo": [
              {
                "Name": "Seq",
                "Args": { "serverUrl": "http://PROD_SEQ_SUNUCUSU:5341" }
              }
            ] // GERÇEK SUNUCU ADRESİ
          }
        }
      }
      // Kural 4 (Diğerleri): Belki production'da diğer logları hiç yazmak istemeyiz, bu yüzden o kuralı silebiliriz.
    ]
  }
}